function vssPoster_fig3(dataVisual, dataManual, plt, opt)

    %% 
    gainPerTime.idealObserver.visual = dataVisual.model_io.model.perf_perfect(:,3);
    gainPerTime.empirical.visual = dataVisual.model_io.data.double.perf;
    gainPerTime.idealObserver.manual = dataManual.model_io.model.perf_perfect(:,3);
    gainPerTime.empirical.manual = dataManual.model_io.data.double.perf;
    
    gainPerTime.idealObserver.both = cat(3, ...
                                         gainPerTime.idealObserver.visual, ...
                                         gainPerTime.idealObserver.manual);
    gainPerTime.empirical.both = cat(3, ...
                                     gainPerTime.empirical.visual, ...
                                     gainPerTime.empirical.manual);
    
    scaleFactor = 0.20;
    temp = [min([gainPerTime.idealObserver.both(:); gainPerTime.empirical.both(:)]), ...
            max([gainPerTime.idealObserver.both(:); gainPerTime.empirical.both(:)])];
    temp = [(temp(1)-(temp(1)*scaleFactor)), (temp(2)+(temp(2)*scaleFactor))];
    temp(1) = 0;
    axisLimits = [temp(1), temp(2), temp(1), temp(2)];
    lineLimitsHorizontal = [temp(1), temp(2)];
    lineLimitsVertical = [temp(1), temp(2)];
    
    figureHandle = figure;
    tiledlayout(1, 2);
    for p = 1:2 % Panel
        if p == 1
            thisColor = plt.color.green;
        elseif p == 2
            thisColor = plt.color.purple;
        end
        thisMean = [mean(gainPerTime.empirical.both(:,:,p), 1, 'omitnan'), ...
                    mean(gainPerTime.idealObserver.both(:,:,p), 1, 'omitnan')];
        thisCis = [ci_mean(gainPerTime.empirical.both(:,:,p)), ...
                    ci_mean(gainPerTime.idealObserver.both(:,:,p))];
    
        nexttile;
        line(lineLimitsHorizontal, lineLimitsVertical, ...
            'LineStyle',        '--', ...
            'LineWidth',        plt.line.widthThin, ...
            'Color',            plt.color.gray(3,:), ...
            'HandleVisibility', 'off');
        hold on
        plot(gainPerTime.empirical.both(:,:,p), gainPerTime.idealObserver.both(:,:,p), ...
            'o', ...
            'MarkerSize',       plt.marker.sizeSmall, ...
            'MarkerFaceColor',  thisColor(2,:), ...
            'MarkerEdgeColor',  plt.color.white, ...
            'LineWidth',        plt.line.widthThin, ...
            'Color',            thisColor(2,:))
        errorbar(thisMean(1), thisMean(2), thisCis(2), thisCis(2), thisCis(1), thisCis(1), ...
            'o', ...
            'MarkerSize',       plt.marker.sizeLarge, ...
            'MarkerFaceColor',  thisColor(1,:), ...
            'MarkerEdgeColor',  'none', ...
            'LineWidth',        plt.line.widthThin, ...
            'CapSize',          0, ...
            'Color',            thisColor(1,:), ...
            'HandleVisibility', 'off')
        hold off
        axis(axisLimits, 'square')
        xticks(0:0.5:5);
        yticks(0:0.5:5);
        xlabel('Empirical gain [Cent/s]');
        ylabel('Ideal observer gain [Cent/s]');
        box off
    end
    
    %% Save plot
    opt.size = [35, 15];
    opt.imgname = ['/Users/ilja/Dropbox/12_work/mr_informationSamplingVisualManual/' ...
                   '5_outreach/conferences/vss2023/poster/figure3.png'];
    opt.save = 1;
    prepareFigure(figureHandle, opt);
    close

end