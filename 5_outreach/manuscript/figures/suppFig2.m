clear all; close all; clc

%% Get data
% Set folder
folder.root = '/Users/ilja/Dropbox/12_work/mr_informationSamplingVisualManual/';
folder.data = strcat(folder.root, '2_data/');
folder.fig = strcat(folder.root, "5_outreach/manuscript/figures/figSupp2");

data = load(strcat(folder.data, 'data_newPipeline.mat'));

% Define visuals
opt_visuals;

%% Plot proportion fixations on easy set
xLabels = ["Emp. prop. mov. chosen [visual]", ...
           "Emp. prop. mov. chosen [manual]"];
yLabels = ["Pred. prop. mov. chosen [visual]", ...
           "Pred. prop. mov. chosen [manual]"];
figLabel = ["visual", "manual"];
plotDataEmp = cat(3, ...
                  data.data.fixations.propFixOnChosenModelEval(:,:,2), ...
                  data.probabilisticModel.pred.visual.propFixChosen);
plotDataPred = cat(3, ...
                  data.data.fixations.propFixOnChosenModelEval(:,:,4), ...
                  data.probabilisticModel.pred.manual.propFixChosen);
nSetSizes = size(plotDataEmp, 2);
nFigures = size(plotDataEmp, 3);

for f = 1:nFigures % Figure
    hFig = figure;
    hTile = tiledlayout(3, 3);
    for p = 1:nSetSizes % Panel
        if p == f
            plt.color.condition = plt.color.green;
        else
            plt.color.condition = plt.color.purple;
        end
        r = corrcoef(plotDataEmp(:,p,f), plotDataPred(:,p,f), ...
                     "Rows", "Complete");
        rSquared = round(r(1,2)^2, 2);
    
        nexttile;
        line([0, 1], [0, 1], ...
            'LineStyle', '-', ...
            'LineWidth', plt.line.widthThin, ...
            'Color', plt.color.black, ...
            'HandleVisibility', 'off');
        hold on
        plot(plotDataEmp(:,p,f), plotDataPred(:,p,f), ...
            'o', ...
            'MarkerSize', plt.marker.sizeSmall, ...
            'MarkerFaceColor', plt.color.gray(2,:), ...
            'MarkerEdgeColor', plt.color.white, ...
            'LineWidth', plt.line.widthThin, ...
            'Color', plt.color.black)
        errorbar(mean(plotDataEmp(:,p,f), 1, 'omitnan'), ...
                 mean(plotDataPred(:,p,f), 1, 'omitnan'), ...
                 ci_mean(plotDataPred(:,p,f)), ...
                 ci_mean(plotDataPred(:,p,f)), ...
                 ci_mean(plotDataEmp(:,p,f)), ...
                 ci_mean(plotDataEmp(:,p,f)), ...
                'o', ...
                'MarkerSize', plt.marker.sizeLarge, ...
                'MarkerFaceColor', plt.color.black, ...
                'MarkerEdgeColor', 'none', ...
                'LineWidth', plt.line.widthThin, ...
                'CapSize', 0, ...
                'Color', plt.color.black, ...
                'HandleVisibility', 'off')
        [~, ~, h] = plotMean(plotDataEmp(:,p,f), plotDataPred(:,p,f), plt.color.black);
        set(h(4), 'LineWidth', plt.line.widthThin);
        text(0.50, 0.10, ...
             ['{\itr^{2}}', ' = ', num2str(rSquared)]);
        title(strcat(num2str(p-1), " easy distractors"));
        hold off
        axis([0, 1, 0, 1], 'square');
        xticks(0:0.50:1);
        yticks(0:0.50:1);
        box off
    end
    xlabel(hTile, xLabels(f), "FontSize", opt.fontSize);
    ylabel(hTile, yLabels(f), "FontSize", opt.fontSize);
    sublabel([], -15, -50);
    opt.size = [35, 35];
    opt.imgname = strcat(folder.fig, figLabel(f));
    opt.save = true;
    prepareFigure(hFig, opt);
    close;
end