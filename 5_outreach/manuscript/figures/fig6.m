clear all; close all; clc

%% Get data
% Set folder
folder.root = '/Users/ilja/Dropbox/12_work/mr_informationSamplingVisualManual/';
folder.data = strcat(folder.root, '2_data/');
folder.fig = strcat(folder.root, "5_outreach/manuscript/figures/fig6");

data = load(strcat(folder.data, 'data_newPipeline.mat'));

% Define visuals
opt_visuals;

%% Plot proportion choices for easy targets
yLabels = ["Prop. choices easy [visual]", "Prop. choices easy [manual]"];

hFig = figure;
tiledlayout(2, 2);
for p = 1:2 % Panel
    if p == 1
        plt.color.condition = plt.color.green;

        emp = data.data.choice.target.proportionEasy(:,:,2);
        pred = data.probabilisticModel.pred.visual.propChoicesEasy;
    else
        plt.color.condition = plt.color.purple;

        emp = data.data.choice.target.proportionEasy(:,:,4);
        pred = data.probabilisticModel.pred.manual.propChoicesEasy;
    end

    nexttile;
    line([[-1; 9], [4; 4]], ...
         [[0.50; 0.50], [0; 1]], ...
        'LineStyle', '-', ...
        'LineWidth', plt.line.widthThin, ...
        'Color', plt.color.black, ...
        'HandleVisibility', 'off');
    hold on
    errorbar(0:1:8, ...
             mean(emp, 1, 'omitnan'), ...
             ci_mean(emp), ...
            'o-', ...
            'MarkerSize', plt.marker.sizeLarge, ...
            'MarkerFaceColor', plt.color.condition(1,:), ...
            'MarkerEdgeColor', plt.color.white, ...
            'LineWidth', plt.line.widthThin, ...
            'CapSize', 0, ...
            'Color', plt.color.condition(1,:), ...
            'HandleVisibility', 'off')
    errorbar(0:1:8, ...
             mean(pred, 1, 'omitnan'), ...
             ci_mean(pred), ...
            'd-', ...
            'MarkerSize', plt.marker.sizeLarge, ...
            'MarkerFaceColor', plt.color.condition(1,:), ...
            'MarkerEdgeColor', plt.color.white, ...
            'LineWidth', plt.line.widthThin, ...
            'CapSize', 0, ...
            'Color', plt.color.condition(1,:), ...
            'HandleVisibility', 'off')
    % Plot some data at a non-sensical location to easily control marker
    % style in legend
    hold on
    plot(999, 999, ...
         'o', ...
         'MarkerSize', plt.marker.sizeLarge, ...
         'MarkerFaceColor', plt.color.condition(1,:), ...
         'MarkerEdgeColor', 'None')
    plot(999, 999, ...
         'd', ...
         'MarkerSize', plt.marker.sizeLarge, ...
         'MarkerFaceColor', plt.color.condition(1,:), ...
         'MarkerEdgeColor', 'None')
    hold off
    axis([-1, 9, 0, 1], 'square');
    xlabel("# easy distractors");
    ylabel(yLabels(p));
    xticks(0:2:8);
    yticks(0:0.25:1);
    legend({"Empirical", "Model"}, 'Location', 'SouthWest');
    legend box off
    box off
end

%% Plot proportion fixations on easy set
xLabels = ["Emp. prop. mov. chosen [visual]", ...
           "Emp. prop. mov. chosen [manual]"];
yLabels = ["Pred. prop. mov. chosen [visual]", ...
           "Pred. prop. mov. chosen [manual]"];
for p = 1:2 % Panel
    if p == 1
        plt.color.condition = plt.color.green;

        emp = mean(data.data.fixations.propFixOnChosenModelEval(:,:,2), 2, 'omitnan');
        pred = mean(data.probabilisticModel.pred.visual.propFixChosen, 2, 'omitnan');
    else
        plt.color.condition = plt.color.purple;

        emp = mean(data.data.fixations.propFixOnChosenModelEval(:,:,4), 2, 'omitnan');
        pred = mean(data.probabilisticModel.pred.manual.propFixChosen, 2, 'omitnan');
    end

    nexttile;
    line([0, 1], [0, 1], ...
        'LineStyle', '-', ...
        'LineWidth', plt.line.widthThin, ...
        'Color', plt.color.black, ...
        'HandleVisibility', 'off');
    hold on
    plot(emp, pred, ...
        'o', ...
        'MarkerSize', plt.marker.sizeSmall, ...
        'MarkerFaceColor', plt.color.gray(2,:), ...
        'MarkerEdgeColor', plt.color.white, ...
        'LineWidth', plt.line.widthThin, ...
        'Color', plt.color.black)
    errorbar(mean(emp, 1, 'omitnan'), mean(pred, 1, 'omitnan'), ...
             ci_mean(pred), ci_mean(pred), ...
             ci_mean(emp), ci_mean(emp), ...
            'o', ...
            'MarkerSize', plt.marker.sizeLarge, ...
            'MarkerFaceColor', plt.color.black, ...
            'MarkerEdgeColor', 'none', ...
            'LineWidth', plt.line.widthThin, ...
            'CapSize', 0, ...
            'Color', plt.color.black, ...
            'HandleVisibility', 'off')
    [~, ~, h] = plotMean(emp, pred, plt.color.black);
    set(h(4), 'LineWidth', plt.line.widthThin);
    hold off
    axis([0, 1, 0, 1], 'square');
    xlabel(xLabels(p));
    ylabel(yLabels(p));
    xticks(0:0.25:1);
    yticks(0:0.25:1);
    box off
end

sublabel([], -20, -70);
opt.size = [35, 35];
opt.imgname = folder.fig;
opt.save = true;
prepareFigure(hFig, opt);
close;